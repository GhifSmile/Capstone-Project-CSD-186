# -*- coding: utf-8 -*-
"""recommendation-model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lo5j6ETRFdaJfgmYnD8mPM7zmLlSeyUN
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

# import library model
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import LinearSVC

from sklearn.neighbors import NearestNeighbors
from sklearn.metrics.pairwise import cosine_similarity

"""## Data Loading"""

!wget --no-check-certificate \
  https://github.com/danielrymeds/datasets/releases/download/mobile-datasets/mobile-spec-datasets.zip \

!unzip /content/mobile-spec-datasets.zip

df = pd.read_excel('Mobile_data.xlsx')

"""## Data Understanding"""

df

df.info()
df.shape

df.describe()

plt.figure(figsize=(10,100))
sns.countplot(y=df['Price'])
plt.show()

"""## Data Preparation

### Product
Menghilangkan baris yang mengandung nama produk ganda dan menyimpannya ke dalam dataframe baru dengan nama df revisi 1 atau df_rev1
"""

df_rev1 = df.drop_duplicates(subset=['Product'])
df_rev1

df_rev1.shape

"""### Price
Menghilangkan simbol mata uang dan tanda baca agar tipe data kolom price dapat diubah dari object menjadi integer.
"""

price1 = df_rev1['Price'].str.replace('â‚¹','')
price2 = price1.str.replace(',','')

price = pd.to_numeric(price2)
price

"""Konversi mata uang rupee menjadi dolar AS"""

price = price*0.013

price

"""Memasukkan dataframe price ke dataframe utama dengan mengubah nama menjadi df revisi 2 atau df_rev2"""

df_rev2 = df_rev1
df_rev2['Price'] = price

df_rev2

"""### Kolom lain

Untuk kolom lain dapat di drop dikarenakan inputan yang diberikan hanyalah harga (price) dan output yang diinginkan adalah nama produk (Product)
"""

df_rev3 = df_rev2.drop(['RAM', 'ROM', 'Display', 'Back_camera', 'Front_camera', 'Processor', 'Battery', 'Rating'], axis=1)
df_rev3

"""Menghilangkan baris dengan nilai missing value atau NaN jika masih ada."""

df_rev4 = df_rev3.dropna()

df_rev4

df_final = df_rev4

"""## Modeling

"""

# Membuat Elemen X dan Y
X = df_final['Price']

start = 0
for i in range(0, len(X)):
    if (i + 1)%10 == 0:
        result = X.iloc[start:i+1].values.reshape(-1, 1)
        start = i + 1
        print(result)

model = NearestNeighbors(metric='euclidean')
model.fit(result)
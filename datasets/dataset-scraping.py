# -*- coding: utf-8 -*-
"""dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15oTgY3f0O5kDLQtfyjaHompZi_dyUI_k
"""

!git

!git init

!git clone https://github.com/foykes/gsm-arena-dataset

# Commented out IPython magic to ensure Python compatibility.
# %cd gsm-arena-dataset/

import pandas as pd

data = pd.read_csv("/content/gsm-arena-dataset/gsm_arena_full_dataset.csv")

data.head()

list(data)

data.shape

li = ["Brand", "Model Name", "Model Image", "Weight", "Resolution", "Internal","Type_1", "Price"]
new_dataset = data[li].copy()

new_dataset

new_dataset.info()

new_dataset.describe()

new_dataset.isnull().sum()

new_dataset = new_dataset.dropna()

new_dataset.isnull().sum()

print('Banyak akumulasi brand', len(new_dataset.Brand.unique()))
print('Brand', new_dataset.Brand.unique())

print('Banyak akumulasi model name', len(new_dataset["Model Name"].unique()))
print('model name', new_dataset["Model Name"].unique())

(new_dataset['Weight']=="b'-'").sum()

new_dataset.head()

new_dataset = new_dataset.loc[(new_dataset['Weight']!="b'-'")]

new_dataset.shape

new_dataset.head(100)

new_dataset  = new_dataset.loc[(new_dataset['Internal'].str[-3]=="A")]

new_dataset

# Ngilangin ASCII pada price
new_dataset = new_dataset.loc[(new_dataset['Price'].str[0:3]=="b'A")]

new_dataset

new_dataset.isnull().sum()

brand = new_dataset["Brand"].str[2:-1].values.tolist()
model_name = new_dataset["Model Name"].str[2:-1].values.tolist()
model_image = new_dataset['Model Image'].str[2:-1].values.tolist()
weight = new_dataset['Weight'].str[2:-1].values.tolist()
resolution = new_dataset["Resolution"].str[2:-1].values.tolist()
memori = new_dataset["Internal"].str[2:-1].values.tolist()
baterai = new_dataset["Type_1"].str[2:-1].values.tolist()
harga = new_dataset["Price"].str[2:-1].values.tolist()

"""# Bagian Bang Danil

### Harga
"""

harga

df_price = pd.DataFrame(harga, columns = ['Harga'])
df_price

df_price = df_price['Harga'].str[6:].values

df_price

df_price1 = pd.DataFrame(df_price, columns=['Harga'])
df_price1

"""INR to USD"""

INR = df_price1['Harga'][df_price1['Harga'].str.contains('INR')]
INR = INR.str.replace(' INR','')
INR = pd.to_numeric(INR)
INR

INR = INR*0.013
INR

"""EUR to USD"""

EUR = df_price1['Harga'][df_price1['Harga'].str.contains('EUR')]
EUR = EUR.str.replace(' EUR','')
EUR = pd.to_numeric(EUR)
EUR

EUR = EUR*1.13
EUR

"""Gabung menjadi 1 dataframe"""

PRICE = [None for i in range(3881)]
def set_price(data):
    for index in data.index:
        try:
            PRICE[index] = data.loc[index]
        except:
            print(index)
set_price(EUR)
set_price(INR)

df_price_final = PRICE
df_price_final

df_price_final = pd.DataFrame(df_price_final, columns=['Harga'])
df_price_final

"""### Battery"""

baterai

"""Membuat kolom baterai"""

df_capacity = pd.DataFrame(baterai, columns = ['Capacity'])
df_capacity

df_capacity1 = df_capacity['Capacity'].str.replace(', non-removable','')
df_capacity1

df_capacity2 = df_capacity1.str.replace('Li-Po','')
df_capacity3 = df_capacity2.str.replace('Li-Ion','')
df_capacity4 = df_capacity3.str.replace('battery','')
df_capacity5 = df_capacity4.str.replace('Removable','')
df_capacity6 = df_capacity5.str.replace('removable','')
df_capacity7 = df_capacity6.str.replace(', ','')
df_capacity8 = df_capacity7.str.replace(' ','')
df_capacity9 = df_capacity8.str.replace('mAh','')
df_capacity10 = df_capacity9.str.replace('Li-ion','')
df_capacity10 = pd.DataFrame(df_capacity10, columns = ['Capacity'])
#df_capacity9 = pd.to_numeric(df_capacity9)
df_capacity10

"""(Wh)"""

wh = df_capacity10[df_capacity10["Capacity"].str.contains('Wh')]
wh

wh1 = wh['Capacity'].str.replace('Non-','')
wh2 = wh1
for index in wh1.index:
  split_string = wh1[index].split("(", 1)
  wh2[index] = split_string[0]
wh3 = wh2.str.replace(',','')
wh4 = pd.to_numeric(wh3)
wh4
#whlist = wh4.values.tolist()
#whlist

"""no Wh"""

no_wh = df_capacity10[~df_capacity10["Capacity"].str.contains('Wh')]
no_wh1 = no_wh['Capacity'].str.replace('Non-','')
no_wh2 = no_wh1.str.replace(',','')
no_wh3 = no_wh2
for index in no_wh2.index:
  split_string = no_wh2[index].split("/", 1)
  no_wh3[index] = split_string[0]

no_wh4 = no_wh3
for index in no_wh3.index:
  split_string = no_wh3[index].split("(", 1)
  no_wh4[index] = split_string[0]

no_wh5 = no_wh4
for index in no_wh4.index:
  split_string = no_wh4[index].split("or", 1)
  no_wh5[index] = split_string[0]

no_wh6 = pd.to_numeric(no_wh5)
no_wh6

"""Gabungkan"""

capacity = [None for i in range(3881)]
def set_capacity(data):
    for index in data.index:
        try:
            capacity[index] = data.loc[index]
        except:
            print(index)
set_capacity(no_wh6)
set_capacity(wh4)

df_capacity_final1 = capacity

df_capacity_final = pd.DataFrame(df_capacity_final1, columns=['Battery Capacity(mAh)'])
df_capacity_final

"""# Bagian Bang Mail

### Weight
"""

weight_1 = [i[0:5] for i in weight]
weight_2 = [i.replace('g','') for i in weight_1]
weight_3 = [i.replace(' (','') for i in weight_2]
weight_4 = [i.replace('~ ','') for i in weight_3]
weight_5 = [i.replace('-2','') for i in weight_4]
weight_6 = [i.replace(',','.') for i in weight_5]

weight_7 = pd.DataFrame(weight_6, columns=['Weight'])

weight_8 = pd.to_numeric(weight_7['Weight'])
weight_9 = weight_8.values.tolist()

weight_final = pd.DataFrame(weight_9, columns=['Weight(g)'])
weight_final

"""### Resolution"""

resolution = [i[0:11] for i in resolution]
resolution_1 = [i.replace(' p', '') for i in resolution]
resolution_2 = [i.replace(' ', '') for i in resolution_1]

resolution_2

lebar = [i[0:4] for i in resolution_2]
lebar1 = [i.replace('x', '') for i in lebar]
lebar1 = [int(i) for i in lebar1]
lebar1

panjang = [i[-4:] for i in resolution_2]
panjang_1 = [i.replace('x','') for i in panjang]
panjang_2 = [i.replace(',','') for i in panjang_1]
panjang_2 = [int(i) for i in panjang_2]
panjang_2

for i in range(3881):
  if lebar1[i] > panjang_2[i]:
    c = lebar1[i]
    lebar1[i] = panjang_2[i]
    panjang_2[i] = c

"""ngebentuk dataframe"""

df = pd.DataFrame(lebar1, columns=['Lebar(px)'])
df['Panjang(px)'] = pd.DataFrame(panjang_2)
df

"""### Memori

#### ROM
"""

memori

memori = [i.replace(' user available', '') for i in memori]
memori

ROM = [i[:5] for i in memori]
ROM

df_ROM = pd.DataFrame(ROM, columns=['ROM'])
df_ROM

"""GB to MB"""

GB = df_ROM[df_ROM['ROM'].str.contains('G')]
GB['ROM'] = GB['ROM'].astype(str).str[:-1]
GB1 = GB['ROM'].str.replace('GB','')
GB2 = GB1.str.replace('G','')
GB3 = GB2.str.replace(';','')
GB4 = GB3.str.replace('/','')
GB5 = pd.to_numeric(GB4)
#GB to MB
GB6 = GB5*1000
GB6

"""MB"""

MB = df_ROM[df_ROM['ROM'].str.contains('M')]
MB['ROM'] = MB['ROM'].astype(str).str[:-1]
#MB_list = MB.values.tolist()
#MB_list
MB1 = MB['ROM'].str.replace('MB','')
MB2 = MB1.str.replace('Mb','')
MB3 = MB2.str.replace('M','')
MB4 = MB3.str.replace(' ','')
MB5 = pd.to_numeric(MB4)

MB5

"""Gabungin"""

rom = [None for i in range(3881)]
def set_rom(data):
    for index in data.index:
        try:
            rom[index] = data.loc[index]
        except:
            print(index)
set_rom(GB6)
set_rom(MB5)

df_ROM_final1 = rom
df_ROM_final = pd.DataFrame(df_ROM_final1, columns=['ROM'])
df_ROM_final

"""#### RAM"""

memori

ram = [i.replace(',','') for i in memori]
ram = [i.replace(';','') for i in ram]
ram = [i.replace('/','') for i in ram]
ram = [i.replace('(3G model) 16/32GB (LTE model)','') for i in ram]
ram_1 = [i.replace('(3G model) 1632GB (LTE model)','') for i in ram]
ram_1

ram_2 = []
for i in ram_1:
  if '(' in i:
    a = i.find('(')
    b = i.find(')')
    ram_2.append(i.replace(i[a:b+1],''))
  else:
    ram_2.append(i)

ram_2

ram_3 = []
for i in ram_2:
  a = i.replace('ROM', '')
  b = a.replace('  ',' ')
  ram_3.append(b)

ram_3

ram_coba = []

for i in ram_3:
  a = i.find('A')
  ram_coba.append(i[:a])

len(ram_coba)

ram_4 = []
for i in ram_coba:
  a = i.split(' ')
  if len(a) > 2:
    ram_4.append(a[1])
  elif len(a) == 2:
    ram_4.append(a[0])

len(ram_4)

for i,s in enumerate(ram_4):
  if 'G' not in s:
    if 'M' not in s:
      print('index ke',i)
      print(s)

for i,j in enumerate(ram_4):
  if i == 1814:
    ram_4[i] = '0.256MB'
  elif i == 2076:
    ram_4[i] = '512MB'
  elif i == 2727:
    ram_4[i] = '1GB'
  elif i == 2869:
    ram_4[i] = '0.384MB'

df_RAM = pd.DataFrame(ram_4, columns=['RAM'])
df_RAM

GB_ram = df_RAM[df_RAM['RAM'].str.contains('G')]
GB_ram['RAM'] = GB_ram['RAM'].astype(str).str[:-1]
GB1_ram = GB_ram['RAM'].str.replace('G','')
GB2_ram = pd.to_numeric(GB1_ram)
#GB to MB
GB3_ram = GB2_ram*1000
GB3_ram

MB_ram = df_RAM[df_RAM['RAM'].str.contains('M')]
MB_ram['RAM'] = MB_ram['RAM'].astype(str).str[:-1]
MB1_ram = MB_ram['RAM'].str.replace('M','')

MB2_ram = pd.to_numeric(MB1_ram)
MB2_ram

RAM = [None for i in range(3881)]
def set_RAM(data):
    for index in data.index:
        try:
            RAM[index] = data.loc[index]
        except:
            print(index)

set_RAM(GB3_ram)
set_RAM(MB2_ram)

df_RAM_final1 = RAM
df_RAM_final = pd.DataFrame(df_RAM_final1, columns=['RAM'])
df_RAM_final

"""### YUK GABUNGIN YUK"""

df_Smartphone = pd.DataFrame(brand, columns=['Brand'])
df_Smartphone['Model Name'] = pd.DataFrame(model_name)
df_Smartphone['Model Image'] = pd.DataFrame(model_image)
df_Smartphone['Weight(g)'] = weight_final
df_Smartphone['Width(px)'] = df['Lebar(px)']
df_Smartphone['Height(px)'] = df['Panjang(px)']
df_Smartphone['ROM(MB)'] = df_ROM_final
df_Smartphone['RAM(MB)'] = df_RAM_final
df_Smartphone['Battery Capacity(mAh)'] = df_capacity_final
df_Smartphone['Price(USD)'] = df_price_final

df_Smartphone

"""## Convert Dataframe to .csv file"""

df_Smartphone.to_csv(r'/content/smartphone_specs.csv')